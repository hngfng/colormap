/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.patterns;

import java.awt.Component;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Rectangle;
import java.awt.TexturePaint;
import java.awt.image.BufferedImage;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JLabel;
import javax.swing.JTable;
import javax.swing.table.TableCellRenderer;
import ui.PlatteEditor;

/**
 *
 * @author allanlee
 */
public class PatternTable extends JTable {

    /**
     * Creates new form PatternTable
     */
    private PatternModel model;

    public PatternTable() {
        initComponents();
        model = new PatternModel();
        PatternTable.this.setModel(model);
        getColumnModel().getColumn(1).setCellRenderer(new PatternLabelRender());
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
 private class PatternLabelRender implements TableCellRenderer {

        private JLabel label = new JLabel() {
            @Override
            protected void paintComponent(Graphics g) {

                super.paintComponent(g);
                String path = getName();
                if (path != null) {
                    try {
                        BufferedImage image = ImageIO.read(new FileInputStream(path));
                        TexturePaint paint = new TexturePaint(image, new Rectangle(0, 0, image.getWidth(), image.getHeight()));
                        Graphics2D g2d = (Graphics2D) g;
                        g2d.setPaint(paint);
                        g2d.fillRect(0, 0, getWidth(), getHeight());
                        g2d.dispose();
                    } catch (FileNotFoundException ex) {
                        Logger.getLogger(PlatteEditor.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (IOException ex) {
                        Logger.getLogger(PlatteEditor.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }

        };

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            if (column == 1) {
                label.setName(String.valueOf(value));
                return label;
            }
            return null;
        }

    }
}
